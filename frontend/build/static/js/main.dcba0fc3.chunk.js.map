{"version":3,"sources":["transitions/timeline.js","components/nav/nav.component.jsx","components/background/background.component.jsx","components/search-button/search-button.component.jsx","pages/home/home.component.jsx","pages/about/about.component.jsx","pages/contact/contact.component.jsx","providers/tracks.provider.jsx","components/search-bar/search-bar.component.jsx","components/spinner/spinner.component.jsx","providers/modal.provider.jsx","providers/message.provider.jsx","pages/playlist/playlist.component.jsx","App.jsx","index.tsx"],"names":["play","pathname","node","appears","timeline","delay","Timeline","paused","texts","querySelectorAll","from","display","autoAlpha","staggerFrom","x","ease","Power1","easeOut","getHomeTimeline","content","querySelector","contentInner","trackBox","easeIn","y","easeInOut","getPlaylistTimeLine","getDefaultTimeline","window","loadPromise","then","requestAnimationFrame","Nav","className","exact","strict","to","Background","SearchButton","Home","About","Contact","href","target","TrackContext","createContext","playlistIframe","playlistName","playlistLink","playlistMade","isLoading","setLoading","boolean","createPlaylistIframe","artistName","TrackProvider","children","useState","setPlaylistIframe","setPlaylistName","setPlaylistLink","setplaylistMade","setIsLoading","a","data","fetch","method","headers","body","JSON","stringify","response","ok","json","console","log","playlist_iframe_href","playlist_name","playlist_link","setTimeout","Provider","value","SearchBar","useContext","setArtistName","type","placeholder","onChange","event","required","onClick","preventDefault","Spinner","ModalContext","modal","showModal","hideModal","ModalProvider","setModal","MessageContext","phoneNumber","spinnerLoading","showSpinner","hideSpinner","changePhoneNumber","number","sendPlaylistMessage","MessageProvider","setPhoneNumber","setSpinnerLoading","split","join","alert","Playlist","src","width","height","title","withRouter","render","location","key","TransitionGroup","component","Transition","appear","onEnter","onExit","exit","timeout","enter","path","PlaylistPage","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.dcba0fc3.chunk.js","sourcesContent":["import { TimelineMax as Timeline, Power1 } from 'gsap';\n\nconst getDefaultTimeline = (node, delay) => {\n  const timeline = new Timeline({ paused: true });\n  const content = node.querySelector('.content');\n  const contentInner = node.querySelector('.content-inner');\n\n  timeline\n    .from(node, 0.025, { display: 'none', autoAlpha: 0, delay, ease: Power1.easeIn })\n    .from(content, 0.125, { autoAlpha: 0, y: 25, ease: Power1.easeInOut })\n    .from(contentInner, 0.125, { autoAlpha: 0, delay: 0.15, ease: Power1.easeIn });\n\n  return timeline;\n}\n\nconst getPlaylistTimeLine = (node, delay) => {\n  const timeline = new Timeline({ paused: true });\n  const content = node.querySelector('.content');\n  const contentInner = node.querySelector('.content-inner');\n  const trackBox = node.querySelector('.track-box');\n\n  timeline\n    .from(node,  0.025, { display: 'none', autoAlpha: 0, delay, ease: Power1.easeIn })\n    .from(content, 0.125, { autoAlpha: 0, y: 25, ease: Power1.easeInOut })\n    .from(contentInner, 0.125, { autoAlpha: 0, delay: 0.15, ease: Power1.easeIn })\n    .from(trackBox, 0.125, { autoAlpha: 0, delay: 0.15, ease: Power1.easeIn });\n\n  return timeline;\n}\n\nconst getHomeTimeline = (node, delay) => {\n  const timeline = new Timeline({ paused: true });\n  const texts = node.querySelectorAll('div > *');\n\n  timeline\n    .from(node, 0, { display: 'none', autoAlpha: 0, delay })\n    .staggerFrom(texts, 0.375, { autoAlpha: 0, x: -25, ease: Power1.easeOut }, 0.125);\n    \n  return timeline;\n}\n\nexport const play = (pathname, node, appears) => {\n  const delay = appears ? 0 : 0.5;\n  let timeline;\n\n  if (pathname === '/')\n    timeline = getHomeTimeline(node, delay);\n  else if (pathname === '/playlist')\n    timeline = getPlaylistTimeLine(node, delay);\n  else\n    timeline = getDefaultTimeline(node, delay);\n\n  window.loadPromise.then(() => requestAnimationFrame(() => timeline.play()))\n}\n\nexport const exit = (node) => {\n  const timeline = new Timeline({ paused: true });\n\n  timeline.to(node, 0.15, { autoAlpha: 0, ease: Power1.easeOut });\n  timeline.play();\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './nav.styles.scss';\n\nconst Nav = () => {\n  return (\n    <div className=\"nav\">\n      <NavLink exact strict to=\"/\">Home</NavLink>\n      <NavLink to=\"/about\">About</NavLink>\n      <NavLink to=\"/contact\">Contact</NavLink>\n      <NavLink to=\"/playlist\">Playlist</NavLink>\n    </div>\n  )\n}\n\nexport default Nav;","import React from 'react';\nimport './background.styles.scss';\n\nconst Background = () => {\n  return (\n    <div className=\"background\"></div>\n  )\n}\n\nexport default Background;","import React from 'react';\n\nimport './search-button.styles.scss';\n\nconst SearchButton = () => {\n  return (\n    <button className=\"search-btn\">&#9658;</button>\n  )\n};\n\nexport default SearchButton;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './home.styles.scss';\n\nimport SearchButton from '../../components/search-button/search-button.component';\n\nconst Home = () => {\n  return ( \n    <div className=\"home\">\n      <div className=\"content\">\n        <h1 className=\"header-1\">Music for Everyone.</h1>\n        <h2 className=\"header-2\">Discover and share</h2>\n        <h3 className=\"header-3\">your perfect</h3>\n        <h4 className=\"header-4\">sound.</h4>\n        <Link to=\"/playlist\">\n          <SearchButton/>\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default Home;","import React from 'react';\nimport './about.styles.scss';\n\nconst About = () => {\n  return (\n    <div className=\"about\">\n      <div className=\"content\">\n      <h1>Make a Playlist!</h1>\n        <div className=\"content-inner\">\n          <p>Welcome to Make a Playlist, a web app that allows you to make a Spotify playlist full of your favorite songs by your favorite artist and artist genres that are similar to them! Just enter the name of the artist below and click the play button! An algorithm was created using Spotify's own API to create a playlist of songs of the desired artist as well as songs of related artist!</p>\n          <p>If you also love the playlist that was generated with this app, you can choose to send it to your phone! Just click the message icon in the playlist section, type in your US phone number, and click send (NOTE: Message API has been turned off for production. If you'd like to test the code out for yourself! Feel free to fork the github repo! :D )</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default About;","import React from 'react';\nimport './contact.styles.scss';\n\nimport  { FaGithubSquare, FaLinkedin, FaUserCircle} from 'react-icons/fa'\n\nconst Contact = () => {\n  return (\n    <div className=\"contact\">\n      <div className=\"content\">\n      <h1>Feel free to reach out!</h1>\n        <div className=\"content-inner\">\n          <p>I love to build things and am always looking for ways to improve! If you have any ideas to make the app better, any bugs, or just want to say hello! Don't be hesitant to contact me about anything! I'm always happy to chat. :D</p>\n          <a href=\"https://github.com/chris510\" target=\"_blank\">\n            <FaGithubSquare className=\"icon\"/>\n          </a>\n          <a href=\"https://www.linkedin.com/in/trinh-christopher/\" target=\"_blank\">\n            <FaLinkedin className=\"icon\"/>\n          </a>\n          <a href=\"https://www.chris-trinh.com/\" target=\"_blank\">\n            <FaUserCircle className=\"icon\"/>\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Contact;","import React, { createContext , useState} from 'react';\n\nexport const TrackContext = createContext({\n  playlistIframe: '',\n  // trackArtistNames: [],\n  playlistName: '',\n  playlistLink: '',\n  playlistMade: false,\n  isLoading: false,\n  setLoading: (boolean) => {},\n  createPlaylistIframe: (artistName) => {}\n});\n\nconst TrackProvider = ({ children }) => {\n  const [playlistIframe, setPlaylistIframe] = useState('');\n  // const [trackArtistNames, setTrackArtistNames] = useState([]);\n  const [playlistName, setPlaylistName] = useState('');\n  const [playlistLink, setPlaylistLink] = useState('');\n  const [playlistMade, setplaylistMade] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const createPlaylistIframe = async (artistName) => {\n    const data = {\"desired_artist\": artistName}\n    const response = await fetch(\"https://api-make-a-playlist.herokuapp.com/playlist\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n\n    if (response.ok) {\n      response.json().then(data => {\n        console.log(data);\n        setPlaylistIframe(data.playlist_iframe_href);\n        // setTrackArtistNames(data.track_artist_list);\n        setPlaylistName(data.playlist_name);\n        setPlaylistLink(data.playlist_link);\n        setTimeout(() => {\n          setplaylistMade(true);\n        }, 1000)\n      })\n    } else {\n      console.log('ERROR HAS OCCURED')\n    }\n  }\n\n  const setLoading = (boolean) => {\n    setIsLoading(boolean);\n  }\n\n  return (\n    <TrackContext.Provider\n      value={{\n        playlistIframe,\n        // trackArtistNames,\n        playlistName,\n        playlistLink,\n        playlistMade,\n        isLoading,\n        setLoading,\n        createPlaylistIframe\n      }}\n    >\n      {children}\n    </TrackContext.Provider>\n  )\n}\n\nexport default TrackProvider;","import React, { useState, useContext } from 'react';\nimport './search-bar.styles.scss';\n\nimport { TrackContext } from '../../providers/tracks.provider';\n\nconst SearchBar = () => {\n  const { createPlaylistIframe, setLoading } = useContext(TrackContext);\n  const [artistName, setArtistName] = useState('');\n\n  const handleClickCreatePlaylist = (event) => {\n    event.preventDefault();\n    console.log('clicked');\n    setLoading(false);\n    console.log('api call')\n    createPlaylistIframe(artistName);\n  }\n\n  const handleSearchChange = (event) => {\n    const { value } = event.target;\n    setArtistName(value);\n  }\n\n  return (\n    <div className=\"search\">\n      <input \n        className=\"search-bar\"\n        type=\"text\"\n        placeholder=\"Ex: Bruno Mars\"\n        value={artistName}\n        onChange={handleSearchChange}\n        required\n      />\n      <button className=\"search-btn\" onClick={handleClickCreatePlaylist}>&#9658;</button>\n    </div>\n  )\n}\n\nexport default SearchBar;\n\n// const SearchBar = () => {\n//   const [openSearchBar, setOpenSearchBar] = useState(false);\n//   const handleClick = () => {\n//     setOpenSearchBar(!openSearchBar);\n//   }\n\n//   const setOpenClassIcon = () => {\n//     return openSearchBar ? 'search-icon open' : 'search-icon';\n//   }\n\n//   const setOpenClass = () => {\n//     return openSearchBar ? 'search open' : 'search';\n//   }\n\n//   return (\n//     <div className={setOpenClass()}>\n//       <input type=\"search\" className=\"search-box\" />\n//       <span className=\"search-button\" onClick={handleClick}>\n//         <span className={setOpenClassIcon()}></span>\n//       </span>\n//     </div>\n//   )\n// }\n\n// export default SearchBar;","import React from 'react';\nimport './spinner.styles.scss';\n\nconst Spinner = () => {\n  return (\n    <div className=\"spinner-overlay\">\n      <div className=\"spinner-container\"></div>\n    </div>\n  )\n}\n\nexport default Spinner;","import React, { useState, createContext } from 'react';\n\nexport const ModalContext = createContext({\n  modal: true,\n  showModal: () => {},\n  hideModal: () => {}\n});\n\nconst ModalProvider = ({ children }) => {\n  const [modal, setModal] = useState(false);\n\n  const showModal = () => {\n    setModal(true);\n  }\n\n  const hideModal = () => {\n    setModal(false);\n  }\n\n  return (\n    <ModalContext.Provider\n      value={{\n        modal,\n        showModal,\n        hideModal\n      }}\n    >\n      { children }\n    </ModalContext.Provider>\n  )\n}\n\nexport default ModalProvider","import React, { createContext, useState } from 'react';\n\nexport const MessageContext = createContext({\n  phoneNumber: \"\",\n  spinnerLoading: false,\n  showSpinner: () => {},\n  hideSpinner: () => {},\n  changePhoneNumber: (number) => {},\n  sendPlaylistMessage: (playlistName, playlistLink) => {}\n})\n\nconst MessageProvider = ({ children }) => {\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [spinnerLoading, setSpinnerLoading] = useState(false);\n\n  const showSpinner = () => {\n    setSpinnerLoading(true);\n  }\n\n  const hideSpinner = () => {\n    setSpinnerLoading(false);\n  }\n\n  const changePhoneNumber = (number) => {\n    setPhoneNumber(number);\n  }\n\n  const formatNumber = (number) => {\n    return number.split('-').join('');\n  }\n\n  const sendPlaylistMessage = async (playlistName, playlistLink, phoneNumber) => {\n    const data = { \n      \"playlist_name\": playlistName,\n      \"playlist_link\": playlistLink,\n      \"phone_number\": formatNumber(phoneNumber)\n    };\n\n    const response = await fetch(\"https://api-make-a-playlist.herokuapp.com/message\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n\n    if (response.ok) {\n      response.json().then(data => {\n        console.log(data);\n        setTimeout(() => {\n          hideSpinner();\n          alert('Message Sent!')\n        }, 2000)\n      })\n    } else {\n      console.log('ERROR HAS OCCURED');\n    }\n  }\n\n  return (\n    <MessageContext.Provider\n      value={{\n        phoneNumber,\n        spinnerLoading,\n        showSpinner,\n        hideSpinner,\n        changePhoneNumber,\n        sendPlaylistMessage\n      }}\n    >\n      { children }\n    </MessageContext.Provider>\n  )\n}\n\nexport default MessageProvider;","import React, { useContext } from 'react';\nimport './playlist.styles.scss';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faComment } from '@fortawesome/free-solid-svg-icons'\n\nimport SearchBar from '../../components/search-bar/search-bar.component';\nimport Spinner from '../../components/spinner/spinner.component';\nimport PhoneInput from '../../components/phone-input/phone-input.component';\nimport { TrackContext } from '../../providers/tracks.provider';\nimport { ModalContext } from '../../providers/modal.provider';\n\nconst Playlist = () => {\n  const { \n    playlistIframe, \n    playlistMade, \n    isLoading,\n  } = useContext(TrackContext);\n  const { modal, showModal } = useContext(ModalContext);\n\n  const onClickMessage = (event) => {\n    event.preventDefault();\n    showModal();\n  }\n\n  return (\n    <div className=\"playlist\">\n      {/* {modal ? <PhoneInput/> : null} */}\n      <div className=\"content\">\n        <div className=\"header\">\n          <h1 className=\"title\">Search Artist</h1>\n          {/* <FontAwesomeIcon \n            onClick={onClickMessage}\n            icon={faComment} \n            className={playlistMade ? 'icon' : 'icon hidden'}\n          /> */}\n        </div>\n        <div className=\"content-inner\">\n          <SearchBar/>\n          <div className=\"track-box\">\n            {isLoading ? null : <Spinner/>}\n            <iframe \n              className={playlistMade ? \"track-playlist\" : \" track-playlist hidden\"}\n              src={playlistIframe} \n              width=\"100%\" \n              height=\"300\" \n              title=\"Your Playlist\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Playlist;","import React from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom'; \nimport { Transition, TransitionGroup } from 'react-transition-group';\nimport './App.css';\n\nimport { play, exit } from './transitions/timeline';\nimport Nav from './components/nav/nav.component';\nimport Background from './components/background/background.component';\nimport Home from './pages/home/home.component';\nimport About from './pages/about/about.component';\nimport Contact from './pages/contact/contact.component';\nimport PlaylistPage from './pages/playlist/playlist.component';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav/>\n      <Background/>\n      <Route render={({ location }) => {\n        const { pathname, key } = location;\n        return (\n          <TransitionGroup component={null}>\n            <Transition\n              key={key}\n              appear={true}\n              onEnter={(node, appears) => play(pathname, node, appears)}\n              onExit={(node, appears) => exit(node, appears)}\n              timeout={{enter: 750, exit: 150}}\n            >\n              <Switch location={location}>\n                <Route exact path=\"/\" component={Home}/>\n                <Route exact path=\"/about\" component={About}/>\n                <Route exact path=\"/contact\" component={Contact}/>\n                <Route exact path=\"/playlist\" component={PlaylistPage}/>\n              </Switch>\n            </Transition>\n          </TransitionGroup>\n        )\n      }}/>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n\n// <Switch>\n// <Route exact path=\"/\" component={Home}/>\n// <Route exact path=\"/about\" component={About}/>\n// <Route exact path=\"/contact\" component={Contact}/>\n// <Route exact path=\"/playlist\" component={PlaylistPage}/>\n// </Switch>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.scss';\n\nimport App from './App';\nimport TrackProvider from './providers/tracks.provider';\nimport MessageProvider from './providers/message.provider';\nimport ModalProvider from './providers/modal.provider';\n\nReactDOM.render(\n  <ModalProvider>\n    <MessageProvider>\n      <TrackProvider>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </TrackProvider>\n    </MessageProvider>\n  </ModalProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}